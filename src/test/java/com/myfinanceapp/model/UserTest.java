package com.myfinanceapp.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class UserTest {
    
    private User user;
    private final String testUid = "test-uid-123";
    private final String testUsername = "testuser";
    private final String testPassword = "P@ssw0rd";
    private final String testSecurityQuestion = "What is your pet's name?";
    private final String testSecurityAnswer = "Fluffy";
    
    @BeforeEach
    void setUp() {
        user = new User(testUid, testUsername, testPassword, testSecurityQuestion, testSecurityAnswer);
    }

    @Test
    void getUid() {
        assertEquals(testUid, user.getUid());
    }

    @Test
    void setUid() {
        String newUid = "new-uid-456";
        user.setUid(newUid);
        assertEquals(newUid, user.getUid());
    }

    @Test
    void getUsername() {
        assertEquals(testUsername, user.getUsername());
    }

    @Test
    void setUsername() {
        String newUsername = "newuser";
        user.setUsername(newUsername);
        assertEquals(newUsername, user.getUsername());
    }

    @Test
    void getPassword() {
        assertEquals(testPassword, user.getPassword());
    }

    @Test
    void setPassword() {
        String newPassword = "NewP@ssw0rd";
        user.setPassword(newPassword);
        assertEquals(newPassword, user.getPassword());
    }

    @Test
    void getSecurityQuestion() {
        assertEquals(testSecurityQuestion, user.getSecurityQuestion());
    }

    @Test
    void setSecurityQuestion() {
        String newQuestion = "What is your mother's maiden name?";
        user.setSecurityQuestion(newQuestion);
        assertEquals(newQuestion, user.getSecurityQuestion());
    }

    @Test
    void getSecurityAnswer() {
        assertEquals(testSecurityAnswer, user.getSecurityAnswer());
    }

    @Test
    void setSecurityAnswer() {
        String newAnswer = "Spot";
        user.setSecurityAnswer(newAnswer);
        assertEquals(newAnswer, user.getSecurityAnswer());
    }
    
    @Test
    void testDefaultConstructor() {
        User defaultUser = new User();
        assertNull(defaultUser.getUid());
        assertNull(defaultUser.getUsername());
        assertNull(defaultUser.getPassword());
        assertNull(defaultUser.getSecurityQuestion());
        assertNull(defaultUser.getSecurityAnswer());
    }
    
    @Test
    void testFullConstructor() {
        User fullUser = new User(testUid, testUsername, testPassword, testSecurityQuestion, testSecurityAnswer);
        assertEquals(testUid, fullUser.getUid());
        assertEquals(testUsername, fullUser.getUsername());
        assertEquals(testPassword, fullUser.getPassword());
        assertEquals(testSecurityQuestion, fullUser.getSecurityQuestion());
        assertEquals(testSecurityAnswer, fullUser.getSecurityAnswer());
    }
    
    @Test
    void testConstructorWithAutoGeneratedUid() {
        User autoUidUser = new User(testUsername, testPassword, testSecurityQuestion, testSecurityAnswer);
        assertNotNull(autoUidUser.getUid());
        assertFalse(autoUidUser.getUid().isEmpty());
        assertEquals(36, autoUidUser.getUid().length()); // UUID standard length
        assertEquals(testUsername, autoUidUser.getUsername());
        assertEquals(testPassword, autoUidUser.getPassword());
        assertEquals(testSecurityQuestion, autoUidUser.getSecurityQuestion());
        assertEquals(testSecurityAnswer, autoUidUser.getSecurityAnswer());
    }
    
    @Test
    void testUniqueUidGeneration() {
        User user1 = new User(testUsername, testPassword, testSecurityQuestion, testSecurityAnswer);
        User user2 = new User(testUsername, testPassword, testSecurityQuestion, testSecurityAnswer);
        assertNotEquals(user1.getUid(), user2.getUid());
    }
}